# Set up resources and Grahp within GCP 
# following the guide https://neo4j.com/docs/operations-manual/current/cloud-deployments/neo4j-gcp/single-instance-vm/#single-instance-gcp

# Enable and create the firewall-rule 

gcloud compute firewall-rules create allow-neo4j-bolt-https \
   --allow tcp:7473,tcp:7687 \
   --source-ranges 0.0.0.0/0 \
   --target-tags neo4j
   
# Create ne4j instance 

# you can use gcloud init | gcloud config set project my-project-id (version 3.4.9) 
gcloud compute instances create my-neo4j-foo \
    --image neo4j-enterprise-1-3-4-9-apoc \
    --tags neo4j \
    --image-project launcher-public

# acces to your instance 
https://[External_IP]:7473

# Connect troght ssh to your instance and download the transaccional, demographics and products'meta features 

sudo su 
cd ..
cd ..
cd /var/lib/neo4j/import
gsutil cp  gs://desarrollofast/transactional001.csv/transactional001.csv transactional001.csv
gsutil cp gs://desarrollofast/demo001.csv/demo001.csv demo001.csv
gsutil cp  gs://desarrollofast/prod_prod_w.csv  prod_prod_w.csv
gsutil cp  gs://desarrollofast/prod_prod_no_conexo.csv prod_prod_no_conexo.csv

# Load customer data 

USING PERIODIC COMMIT LOAD CSV WITH HEADERS FROM 'file:///demo001.csv' AS line FIELDTERMINATOR '|'

CREATE (c:Cliente { id_cte:toInteger(line.ID_CTE), FECHA_NAC: date(split(line.FECHA_NAC," ")[0]), 
GENERO: line.GENERO, EDO_CIVIL: line.EDO_CIVIL, D_EDO: toInteger(line.D_EDO),
FECHA_PRIMERA_COMPRA: date(split(line.FECHA_PRIMERA_COMPRA," ")[0]),
F_ULT_COMP: date(split(line.F_ULT_COMP," ")[0]),
FECHA_ALTA: date(split(line.FECHA_ALTA," ")[0]), ESTATUS_MIGRACION:toInteger(line.ESTATUS_MIGRACION)});

# Load Families data 

CREATE INDEX ON :Familia(id_Familia);
LOAD CSV WITH HEADERS FROM 'file:///prod_prod_w.csv' AS csvline FIELDTERMINATOR ','
WITH csvline
MERGE (prod:Familia{id_Familia: toInteger(csvline.source) } );


LOAD CSV WITH HEADERS FROM 'file:///prod_prod_no_conexo.csv' AS csvline FIELDTERMINATOR ','
WITH csvline
MERGE (prod:Familia{id_Familia: toInteger(csvline.id_Familia) } );
# Build relations COMPRO_CLASE

USING PERIODIC COMMIT LOAD CSV WITH HEADERS FROM 'file:///transactional001.csv' AS csvline FIELDTERMINATOR '|'
WITH csvline
WHERE csvline.PROD_AREA IN ["Ropa", "Muebles"] 
MATCH (c:Cliente{id_cte:toInteger(csvline.ID_CTE)})
MATCH(prod:Familia{id_prodclase:1000000*(CASE csvline.PROD_AREA WHEN 'Muebles' THEN 2  WHEN 'Ropa' THEN 1 ELSE 3 END)+ 100000*toInteger(csvline.PROD_DEP)+1000*toInteger(csvline.PROD_CLAS)+toInteger(csvline.PROD_FAM)})
MERGE (c)-[r:COMPRO_CLASE]->(prod)
ON CREATE SET r.peso = 0
return count(prod); 










